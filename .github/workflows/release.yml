name: "构建 - Release"

on:
  push:
    tags:
      - 'v*.*.*'  # 推送标签时触发

jobs:
  build-full-install-zip:
    name: "构建 - 全量安装包"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            artifact_name: "Node-OBA-Fix-linux-x64.tar.xz"

          - os: ubuntu-24.04-arm
            artifact_name: "Node-OBA-Fix-linux-arm64.tar.xz"  

          - os: macos-13
            artifact_name: "Node-OBA-Fix-macos-x64.tar.xz"

          - os: macos-14
            artifact_name: "Node-OBA-Fix-macos-arm64.tar.xz"            

          - os: windows-latest
            artifact_name: "Node-OBA-Fix-windows-x64.tar.gz"
                 
          # 自托管 Onecloud runner, 构建 ArmV7L 发行版
          - os: self-hosted
            artifact_name: "Node-OBA-Fix-linux-armv7l.tar.xz"            

    runs-on: ${{ matrix.os }}
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: npm i --no-package-lock

      - name: "构建"
        run: npm run build

      ## Linux & MacOS
      - name: "复制 Node.js 和运行脚本"
        run: |
          cp $(which node) .
          cp platforms/linux/run.sh .
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') || contains(matrix.os, 'self-hosted')

      - name: "打包为 tar.xz 文件"
        run: |
          tar -caf ${{ matrix.artifact_name }} dist nginx package.json node_modules node run.sh
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') || contains(matrix.os, 'self-hosted')


      ## Windows
      - name: "复制 Node.js 和运行脚本"
        run: |
          $SRC = (Get-Command node.exe).Path
          copy $SRC node.exe
          copy platforms/windows/run.ps1 .
        if: matrix.os == 'windows-latest'

      - name: "打包为 tar.gz 文件"
        run: |
          tar -caf ${{ matrix.artifact_name }} dist package.json node_modules node.exe run.ps1
        if: matrix.os == 'windows-latest'        

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  build-update-zip:
    name: "构建 - 增量更新包"
    runs-on: ubuntu-latest
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: |
          npm i --no-package-lock

      - name: "开始构建"
        run: |
          npm run build

      - name: "打包 update.zip"
        run: |
          zip -r update.zip dist package.json

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: update
          path: |
            dist
            package.json

  upload-to-release:
    name: "打包 - 上传至 Release"
    runs-on: ubuntu-latest
    needs: [build-full-install-zip, build-update-zip]
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的仓库历史     

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "下载构建文件"
        uses: actions/download-artifact@v4
        
      - name: "重新打包 Linux X64"
        run: |
          cd Node-OBA-Fix-linux-x64.tar.xz
          zip -r ../Node-OBA-Fix-linux-x64.tar.xz.zip *
          cd ..
  
      - name: "重新打包 Linux Arm64"
        run: |
          cd Node-OBA-Fix-linux-arm64.tar.xz
          zip -r ../Node-OBA-Fix-linux-arm64.tar.xz.zip *
          cd ..
  
      - name: "重新打包 Linux ArmV7L"
        run: |
          cd Node-OBA-Fix-linux-armv7l.tar.xz
          zip -r ../Node-OBA-Fix-linux-armv7l.tar.xz.zip *
          cd ..  

      - name: "重新打包 MacOS X64"
        run: |
          cd Node-OBA-Fix-macos-x64.tar.xz
          zip -r ../Node-OBA-Fix-macos-x64.tar.xz.zip *
          cd ..
  
      - name: "重新打包 MacOS Arm64"
        run: |
          cd Node-OBA-Fix-macos-arm64.tar.xz
          zip -r ../Node-OBA-Fix-macos-arm64.tar.xz.zip *
          cd ..
  
      - name: "重新打包 Windows X64"
        run: |
          cd Node-OBA-Fix-windows-x64.tar.gz
          zip -r ../Node-OBA-Fix-windows-x64.tar.gz.zip *
          cd ..
  
      - name: "重新打包 增量更新包"
        run: |
          cd update
          zip -r ../update.zip *
          cd ..

      - name: "自动生成变更日志"
        run: npx changelogithub-chinese
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}

      - name: "上传至 Release"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Node-OBA-Fix-linux-x64.tar.xz.zip
            Node-OBA-Fix-linux-arm64.tar.xz.zip
            Node-OBA-Fix-linux-armv7l.tar.xz.zip            
            Node-OBA-Fix-macos-x64.tar.xz.zip
            Node-OBA-Fix-macos-arm64.tar.xz.zip
            Node-OBA-Fix-windows-x64.tar.gz.zip
            update.zip
