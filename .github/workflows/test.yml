name: "构建 - 测试"

on:
  push:
    branches:
      - '*'  # 在任何推送时均触发

jobs:
  build-linux-x64:
    name: "测试构建 - Linux x64"
    runs-on: ubuntu-24.04
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: npm i --no-package-lock

      - name: "测试构建"
        run: npm run build

      - name: "打包为 tar.xz 文件"
        run: |
          tar -caf build-linux-x64.tar.xz dist nginx package.json node_modules

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: build-linux-x64
          path: build-linux-x64.tar.xz

  build-linux-arm64:
    name: "测试构建 - Linux Arm64(Aarch64)"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: npm i --no-package-lock

      - name: "测试构建"
        run: npm run build

      - name: "打包为 tar.xz 文件"
        run: |
          tar -caf build-linux-arm64.tar.xz dist nginx package.json node_modules

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: build-linux-arm64
          path: build-linux-arm64.tar.xz

  # 去掉, 无需测试ArmV7L

  # build-armv7l-test:
  #   name: "测试构建 - Linux ArmV7L"
  #   runs-on: self-hosted  # 使用自托管 runner
  #   steps:
  #     - name: "获取源代码"
  #       uses: actions/checkout@v4

  #     - name: "设置 Node.js 编译环境"
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #         cache: 'npm'

  #     - name: "安装依赖"
  #       run: npm i --no-package-lock

  #     - name: "测试构建"
  #       run: npm run build             

  build-macos-x64:
    name: "测试构建 - MacOS x64"
    runs-on: macos-13
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: npm i --no-package-lock

      - name: "测试构建"
        run: npm run build

      - name: "打包为 tar.xz 文件"
        run: |
          tar -caf build-macos-x64.tar.xz dist nginx package.json node_modules

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-x64
          path: build-macos-x64.tar.xz        

  build-macos-arm64:
    name: "测试构建 - MacOS Arm64(Aarch64, Apple Silicon)"
    runs-on: macos-14
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: npm i --no-package-lock

      - name: "测试构建"
        run: npm run build

      - name: "打包为 tar.xz 文件"
        run: |
          tar -caf build-macos-arm64.tar.xz dist nginx package.json node_modules

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-arm64
          path: build-macos-arm64.tar.xz              

  build-windows-x64:
    name: "测试构建 - Windows x64"
    runs-on: windows-latest
    steps:
      - name: "获取源代码"
        uses: actions/checkout@v4

      - name: "设置 Node.js 编译环境"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: "安装依赖"
        run: npm i --no-package-lock

      - name: "测试构建"
        run: npm run build   

      - name: "打包为 tar.xz 文件"
        run: |
          tar -caf build-windows-x64.tar.xz dist nginx package.json node_modules

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: build-windows-x64
          path: build-windows-x64.tar.xz   