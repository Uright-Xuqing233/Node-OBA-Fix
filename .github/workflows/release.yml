name: "Release Binary"

on:
  push:
    tags:
      - 'v*.*.*'  # 仅当推送的标签以 'v' 开头时触发（例如 v1.0.0）

jobs:
  build-tar-ball:
    name: "Build and Tar Ball"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            artifact_name: "Node-OBA-Fix-linux-x64.tar.xz"
       

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm i --no-package-lock
      - run: npm run build

      ## Linux & MacOS Copy NodeJS
      - run: |
          cp $(which node) .
          cp platforms/linux/run.sh .
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') || contains(matrix.os, 'self-hosted')

      ## Linux & MacOS Tar
      - run: |
          tar -caf ${{ matrix.artifact_name }} dist nginx package.json node_modules node run.sh
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') || contains(matrix.os, 'self-hosted')


      ## Windows Copy NodeJS
      - run: |
          $SRC = (Get-Command node.exe).Path
          copy $SRC node.exe
          copy platforms/windows/run.ps1 .
        if: matrix.os == 'windows-latest'

      ## Windows Tar
      - run: |
          tar -caf ${{ matrix.artifact_name }} dist package.json node_modules node.exe run.ps1
        if: matrix.os == 'windows-latest'        

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  build-update-zip:
    name: "打包升级压缩包"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: "安装依赖"
        run: |
          npm i --no-package-lock

      - name: "开始构建"
        run: |
          npm run build

      - name: "打包 update.zip"
        run: |
          zip -r update.zip dist package.json

      - name: "上传文件"
        uses: actions/upload-artifact@v4
        with:
          name: update
          path: |
            dist
            package.json

  upload-to-release:
    name: "上传至Release"
    runs-on: ubuntu-latest
    needs: [build-tar-ball, build-update-zip]
    steps:
      - name: "Download Artifacts"
        uses: actions/download-artifact@v4

      - name: "重新打包为ZIP文件"
        run: |
          # 重新打包 Linux X64
          cd Node-OBA-Fix-linux-x64.tar.xz
          zip -r ../Node-OBA-Fix-linux-x64.tar.xz.zip *
          cd ..



          # 重新打包 update
          cd update
          zip -r ../update.zip *
          cd ..

      - name: "Upload to Release"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Node-OBA-Fix-linux-x64.tar.xz.zip
            Node-OBA-Fix-linux-arm64.tar.xz.zip
            Node-OBA-Fix-macos-x64.tar.xz.zip
            Node-OBA-Fix-macos-arm64.tar.xz.zip
            Node-OBA-Fix-windows-x64.tar.xz.zip
            Node-OBA-Fix-linux-armv7l.tar.xz.zip
            update.zip
